{"name": "cart_1添加购物车成功", "status": "broken", "statusDetails": {"message": "ValueError: dictionary update sequence element #0 has length 1; 2 is required", "trace": "self = <testcase.test_excel_case.TestExcel object at 0x04AB1CD0>\ncase = {'cookies': '', 'headers': '{\"Authorization\": \"JWT ${token}$\"}', 'status_code': 201.0, '前置条件': 'login_4', ...}\n\n    @pytest.mark.parametrize(\"case\",run_list)\n    # 2、修改方法参数\n    def test_run(self,case):\n    \n    \n    \n        # 3、重构函数内容\n        #data_key = ExcelConfig.DataConfig\n        # run_list第1个用例，用例，key获取values\n        #获取表格上字段的信息\n        url = ConfigYaml().get_conf_url()+case[data_key.url]\n        case_id = case[data_key.case_id]\n        case_model = case[data_key.case_model]\n        case_name = case[data_key.case_name]\n        pre_exec = case[data_key.pre_exec]\n        method = case[data_key.method]\n        params_type = case[data_key.params_type]\n        params = case[data_key.params]\n        expect_result = case[data_key.expect_result]\n        headers = case[data_key.headers]\n        cookies =case[data_key.cookies]\n        code = case[data_key.code]\n        db_verify = case[data_key.db_verify]\n    \n    \n    \n        # 1、验证前置条件\n        if pre_exec:\n            pass\n        # 2、找到执行用例\n            # 前置测试用例\n            pre_case = data_init.get_case_pre(pre_exec)\n            print(\"前置条件信息为：%s\"%pre_case)\n            pre_res = self.run_pre(pre_case)\n            headers,cookies = self.get_correlation(headers,cookies,pre_res)\n    \n        header = Base.json_parse(headers)\n        cookie = Base.json_parse(cookies)\n        res = self.run_api(url, method, params, header,cookie)\n        print(\"测试用例执行：%s\" % res)\n    \n        #allure\n        #sheet名称  feature 一级标签\n        allure.dynamic.feature(sheet_name)\n        #模块   story 二级标签\n        allure.dynamic.story(case_model)\n        #用例ID+接口名称  title\n        allure.dynamic.title(case_id+case_name)\n        #请求URL  请求类型 期望结果 实际结果描述\n        desc = \"<font color='red'>当前执行时间: </font> {}<Br/>\" \\\n                \"<font color='red'>请求URL: </font> {}<Br/>\" \\\n               \"<font color='red'>请求类型: </font>{}<Br/>\" \\\n                \"<font color='red'>期望状态码: </font>{}<Br/>\" \\\n                \"<font color='red'>实际状态码: </font>{}<Br/>\" \\\n               \"<font color='red'>期望结果: </font>{}<Br/>\" \\\n               \"<font color='red'>实际结果: </font>{}\".format(str(datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")),\n                                                          url,method,code,pprint.pformat(res[\"code\"]),\n>                                                         pprint.pformat(dict(expect_result)),\n                                                          pprint.pformat(res[\"body\"]))\nE       ValueError: dictionary update sequence element #0 has length 1; 2 is required\n\ntestcase\\test_excel_case.py:151: ValueError"}, "attachments": [{"name": "log", "source": "7611fab4-7784-4478-9382-3e1b49115d10-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case", "value": "{'用例ID': 'cart_1', '模块': '购物车', '接口名称': '添加购物车成功', '请求URL': '/cart/', '前置条件': 'login_4', '请求类型': 'post', '请求参数类型': 'json', '请求参数': '{\"sku_id\": \"3\",\"count\": \"1\", \"selected\": \"true\"}', '预期结果': \"{sku_id': 3, 'count': 1}\", '实际结果': '', '备注': '', '是否运行': 'Y', 'headers': '{\"Authorization\": \"JWT ${token}$\"}', 'cookies': '', 'status_code': 201.0, '数据库验证': ''}"}], "start": 1598239121221, "stop": 1598239122166, "uuid": "564f235a-9316-4279-a9e0-e3ae80693ee0", "historyId": "e9e5652361093d01b3a47021362b3242", "testCaseId": "dd2521432c4340b625f0f9387327dd8f", "fullName": "testcase.test_excel_case.TestExcel#test_run", "labels": [{"name": "feature", "value": "美多商城接口测试"}, {"name": "story", "value": "购物车"}, {"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_excel_case"}, {"name": "subSuite", "value": "TestExcel"}, {"name": "host", "value": "SZPC012"}, {"name": "thread", "value": "26140-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_excel_case"}]}